"use strict";(self.webpackChunklintnet=self.webpackChunklintnet||[]).push([[736],{7420:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>l});var s=n(7624),o=n(2172);const i={sidebar_position:300},r="Customize Outputs",u={id:"guides/customize-output",title:"Customize Outputs",description:"You can customize output formats by outputs configuration.",source:"@site/docs/guides/customize-output.md",sourceDirName:"guides",slug:"/guides/customize-output",permalink:"/docs/guides/customize-output",draft:!1,unlisted:!1,editUrl:"https://github.com/lintnet/lintnet.github.io/edit/main/docs/guides/customize-output.md",tags:[],version:"current",sidebarPosition:300,frontMatter:{sidebar_position:300},sidebar:"tutorialSidebar",previous:{title:"Lint across files",permalink:"/docs/guides/lint-across-files"},next:{title:"File restriction",permalink:"/docs/guides/file-restriction"}},a={},l=[{value:"Transform template parameters by Jsonnet",id:"transform-template-parameters-by-jsonnet",level:2}];function c(t){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.M)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"customize-outputs",children:"Customize Outputs"}),"\n",(0,s.jsxs)(e.p,{children:["You can customize output formats by ",(0,s.jsx)(e.code,{children:"outputs"})," configuration."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/lintnet/lintnet/blob/main/json-schema/lintnet.json",children:"JSON Schema"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/lintnet/examples/tree/main/tutorial-2",children:"Tutorial"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-jsonnet",children:"  outputs: [\n    {\n      // id must be unique in outputs\n      id: 'hello',\n      // jsonnet, text/template, html/template\n      renderer: 'jsonnet',\n      // template file\n      template: 'examples/output/output.jsonnet',\n      // Jsonnet file to transform template parameters\n      transform: 'examples/transform/template.jsonnet',\n      config: {},\n    },\n  ],\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"lintnet lint -output hello\n"})}),"\n",(0,s.jsx)(e.h2,{id:"transform-template-parameters-by-jsonnet",children:"Transform template parameters by Jsonnet"}),"\n",(0,s.jsxs)(e.p,{children:["You can transform template parameters by Jsonnet.\nThis is useful for ",(0,s.jsx)(e.code,{children:"text/template"})," and ",(0,s.jsx)(e.code,{children:"html/template"}),"."]})]})}function m(t={}){const{wrapper:e}={...(0,o.M)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(c,{...t})}):c(t)}},2172:(t,e,n)=>{n.d(e,{I:()=>u,M:()=>r});var s=n(1504);const o={},i=s.createContext(o);function r(t){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function u(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:r(t.components),s.createElement(i.Provider,{value:e},t.children)}}}]);