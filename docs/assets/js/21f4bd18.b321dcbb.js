"use strict";(self.webpackChunklintnet=self.webpackChunklintnet||[]).push([[555],{8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var i=t(6540);const l={},o=i.createContext(l);function s(n){const e=i.useContext(o);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:s(n.components),i.createElement(o.Provider,{value:e},n.children)}},8611:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"guides/usage","title":"Usage","description":"lintnet lint","source":"@site/docs/guides/usage.md","sourceDirName":"guides","slug":"/guides/usage","permalink":"/docs/guides/usage","draft":false,"unlisted":false,"editUrl":"https://github.com/lintnet/lintnet.github.io/edit/main/docs/guides/usage.md","tags":[],"version":"current","sidebarPosition":500,"frontMatter":{"sidebar_position":500},"sidebar":"tutorialSidebar","previous":{"title":"base_data_path","permalink":"/docs/guides/base-data-path"},"next":{"title":"Error Level","permalink":"/docs/guides/error-level"}}');var l=t(4848),o=t(8453);const s={sidebar_position:500},a="Usage",r={},c=[{value:"lintnet lint",id:"lintnet-lint",level:2},{value:"lintnet info",id:"lintnet-info",level:2},{value:"lintnet init",id:"lintnet-init",level:2},{value:"lintnet test",id:"lintnet-test",level:2},{value:"lintnet new",id:"lintnet-new",level:2},{value:"lintnet completion",id:"lintnet-completion",level:2},{value:"completion bash",id:"completion-bash",level:3},{value:"completion zsh",id:"completion-zsh",level:3},{value:"completion fish",id:"completion-fish",level:3},{value:"lintnet version",id:"lintnet-version",level:2}];function h(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",pre:"pre",...(0,o.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"usage",children:"Usage"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-console",children:"$ lintnet --help\nNAME:\n   lintnet - Powerful, Secure, Shareable Linter Powered by Jsonnet. https://lintnet.github.io/\n\nUSAGE:\n   lintnet [global options] [command [command options]]\n\nVERSION:\n   0.4.11 (0ba58ccc5316e997ea48b0e289529b0399764457)\n\nCOMMANDS:\n   lint, l     Lint files\n   info        Output the information regarding lintnet\n   init        Scaffold configuration file\n   test, t     Test lint files\n   new         Create a lint file and a test file\n   completion  Output shell completion script for bash, zsh, or fish\n   version     Show version\n   help, h     Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --log-level string          log level [$LINTNET_LOG_LEVEL]\n   --log-color string          Log color. One of 'auto' (default), 'always', 'never' [$LINTNET_LOG_COLOR]\n   --config string, -c string  Configuration file path [$LINTNET_CONFIG]\n   --help, -h                  show help\n   --version, -v               print the version\n"})}),"\n",(0,l.jsx)(e.h2,{id:"lintnet-lint",children:"lintnet lint"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-console",children:"$ lintnet lint --help\nNAME:\n   lintnet lint - Lint files\n\nUSAGE:\n   lintnet lint [command options] [lint file paths and data file paths]\n\nDESCRIPTION:\n   Lint files\n\n   $ lintnet lint\n\n   You can lint only specific files.\n\n   $ lintnet lint [lint file paths and data file paths]\n\n   You can also lint only a specific target.\n\n   $ lintnet lint -target [target id]\n\n   By default, lintnet outputs nothing when the lint succeeds.\n   You can output JSON even if the lint succeeds. This is useful if you pass the output to other program such as jq.\n\n   $ lintnet lint -output-success\n\n\nOPTIONS:\n   --output string, -o string       You can customize the output format. You can specify an output id\n   --target string, -t string       Lint only a specific target. You can specify a target id\n   --error-level string, -e string  Set the error level [$LINTNET_ERROR_LEVEL]\n   --shown-error-level string       Set the shown error level [$LINTNET_SHOWN_ERROR_LEVEL]\n   --output-success                 Output the result even if the lint succeeds (default: false) [$LINTNET_OUTPUT_SUCCESS]\n   --help, -h                       show help\n"})}),"\n",(0,l.jsx)(e.h2,{id:"lintnet-info",children:"lintnet info"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-console",children:'$ lintnet info --help\nNAME:\n   lintnet info - Output the information regarding lintnet\n\nUSAGE:\n   lintnet info [command options]\n\nDESCRIPTION:\n   Output the information regarding lintnet.\n\n   $ lintnet info\n   {\n     "version": "v0.3.0",\n     "config_file": "lintnet.jsonnet",\n     "root_dir": "/Users/foo/Library/Application Support/lintnet",\n     "data_root_dir": "/Users/foo/repos/src/github.com/lintnet/lintnet",\n     "env": {\n     "GITHUB_TOKEN": "(masked)",\n     "LINTNET_LOG_LEVEL": "warn"\n     }\n   }\n\n   This command is useful for trouble shooting and sharing your environment in GitHub Issues.\n\n   You can mask the current user name.\n\n   $ lintnet info -mask-user\n\n   You can also get the root directory where modules are installed.\n\n   $ lintnet info -module-root-dir\n\n\nOPTIONS:\n   --module-root-dir  Show only the root directory where modules are installed (default: false)\n   --mask-user        Mask the current user name (default: false)\n   --help, -h         show help\n'})}),"\n",(0,l.jsx)(e.h2,{id:"lintnet-init",children:"lintnet init"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-console",children:"$ lintnet init --help\nNAME:\n   lintnet init - Scaffold configuration file\n\nUSAGE:\n   lintnet init\n\nDESCRIPTION:\n   Scaffold configuration file.\n\n   $ lintnet init\n\n   This command generates lintnet.jsonnet.\n   If the file already exists, this command does nothing.\n\n\nOPTIONS:\n   --help, -h  show help\n"})}),"\n",(0,l.jsx)(e.h2,{id:"lintnet-test",children:"lintnet test"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-console",children:'$ lintnet test --help\nNAME:\n   lintnet test - Test lint files\n\nUSAGE:\n   lintnet test [<lint file, test file, or directory> ...]\n\nDESCRIPTION:\n   Test lint files.\n\n   If you run "lintnet test" without any argument,\n   lintnet searches lint files using a configuration file and tests all lint files having test files.\n   Lint files without test files are ignored.\n   You can test only specific files by specifying files as arguments.\n   If you specify files explicitly, a configuration file is unnecessary.\n   This means when you develop modules, you don\'t have to prepare a configuration file.\n   If you specify directories, lint files in those directories and subdirectories are tested.\n   For example, "lintnet test ." searches files matching the glob pattern "**/*.jsonnet",\n   and "lintnet test foo" search files matching "foo/**/*.jsonnet".\n   If a configuration file isn\'t specified and isn\'t found, "lintnet test" works as "lintnet test .".\n\n   You can test only a specific target with -target option.\n\n\nOPTIONS:\n   --target string, -t string  Target ID\n   --help, -h                  show help\n'})}),"\n",(0,l.jsx)(e.h2,{id:"lintnet-new",children:"lintnet new"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-console",children:'$ lintnet new --help\nNAME:\n   lintnet new - Create a lint file and a test file\n\nUSAGE:\n   lintnet new [<lint file|main.jsonnet>]\n\nDESCRIPTION:\n   Create a lint file and a test file.\n\n   $ lintnet new [<lint file|main.jsonnet>]\n\n   This command creates a lint file and a test file.\n   If the argument is not given, the lint file is created as "main.jsonnet".\n\n\nOPTIONS:\n   --help, -h  show help\n'})}),"\n",(0,l.jsx)(e.h2,{id:"lintnet-completion",children:"lintnet completion"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-console",children:"$ lintnet completion --help\nNAME:\n   lintnet completion - Output shell completion script for bash, zsh, or fish\n\nUSAGE:\n   lintnet completion [command [command options]]\n\nDESCRIPTION:\n   Output shell completion script for bash, zsh, or fish.\n   Source the output to enable completion.\n\n   e.g.\n\n   .bash_profile\n\n   if command -v lintnet &> /dev/null; then\n     source <(lintnet completion bash)\n   fi\n\n   .zprofile\n\n   if command -v lintnet &> /dev/null; then\n     source <(lintnet completion zsh)\n   fi\n\n   fish\n\n   lintnet completion fish > ~/.config/fish/completions/lintnet.fish\n\n\nCOMMANDS:\n   bash  Output shell completion script for bash\n   zsh   Output shell completion script for zsh\n   fish  Output shell completion script for fish\n\nOPTIONS:\n   --help, -h  show help\n"})}),"\n",(0,l.jsx)(e.h3,{id:"completion-bash",children:"completion bash"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-console",children:"$ completion bash --help\nNAME:\n   lintnet completion bash - Output shell completion script for bash\n\nUSAGE:\n   lintnet completion bash\n\nOPTIONS:\n   --help, -h  show help\n"})}),"\n",(0,l.jsx)(e.h3,{id:"completion-zsh",children:"completion zsh"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-console",children:"$ completion zsh --help\nNAME:\n   lintnet completion zsh - Output shell completion script for zsh\n\nUSAGE:\n   lintnet completion zsh\n\nOPTIONS:\n   --help, -h  show help\n"})}),"\n",(0,l.jsx)(e.h3,{id:"completion-fish",children:"completion fish"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-console",children:"$ completion fish --help\nNAME:\n   lintnet completion fish - Output shell completion script for fish\n\nUSAGE:\n   lintnet completion fish\n\nOPTIONS:\n   --help, -h  show help\n"})}),"\n",(0,l.jsx)(e.h2,{id:"lintnet-version",children:"lintnet version"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-console",children:"$ lintnet version --help\nNAME:\n   lintnet version - Show version\n\nUSAGE:\n   lintnet version\n\nOPTIONS:\n   --json, -j  Output version in JSON format (default: false)\n   --help, -h  show help\n"})})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(h,{...n})}):h(n)}}}]);