"use strict";(self.webpackChunklintnet=self.webpackChunklintnet||[]).push([[160],{7623:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var i=t(5893),s=t(1151);const l={sidebar_position:300},r="Lint rules",d={id:"lint-rule",title:"Lint rules",description:"The specification is unstable yet.",source:"@site/docs/lint-rule.md",sourceDirName:".",slug:"/lint-rule",permalink:"/docs/lint-rule",draft:!1,unlisted:!1,editUrl:"https://github.com/lintnet/lintnet.github.io/edit/main/docs/lint-rule.md",tags:[],version:"current",sidebarPosition:300,frontMatter:{sidebar_position:300},sidebar:"tutorialSidebar",previous:{title:"Supported data format",permalink:"/docs/supported-data-format"},next:{title:"Configuration file",permalink:"/docs/config-file"}},o={},c=[{value:"Top level arguments",id:"top-level-arguments",level:2},{value:"Format of Jsonnet",id:"format-of-jsonnet",level:2},{value:"Native functions",id:"native-functions",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"lint-rules",children:"Lint rules"}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"The specification is unstable yet."})}),"\n",(0,i.jsx)(n.p,{children:"lintnet uses Jsonnet to write lint rules."}),"\n",(0,i.jsx)(n.p,{children:"e.g."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonnet",children:"function(param) if param.data.file_type != 'csv' then null else std.mapWithIndex(function(idx, line) {\n  message: 'age must be greater or equal than 18',\n  failed: std.parseInt(line[1]) < 18,\n  level: 'warn',\n  location: {\n    index: idx,\n    line: std.join(',', line),\n  },\n}, param.data.value)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"top-level-arguments",children:"Top level arguments"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://jsonnet.org/ref/language.html#top-level-arguments-tlas",children:"Top level arguments"})," ",(0,i.jsx)(n.code,{children:"param"})," is passed to lint files."]}),"\n",(0,i.jsxs)(n.p,{children:["The format of ",(0,i.jsx)(n.code,{children:"param"})," is"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json5",children:'{\n  data: {\n    file_path: "foo.yaml",\n    file_type: "yaml",\n    file_text: "...",\n    value: {\n      // data\n    }\n  },\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"format-of-jsonnet",children:"Format of Jsonnet"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"JSONPath"}),(0,i.jsx)(n.th,{children:"type"}),(0,i.jsx)(n.th,{children:"description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".name"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Rule name"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".description"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Rule description"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".message"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Error message"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".failed"})}),(0,i.jsx)(n.td,{children:"bool"}),(0,i.jsx)(n.td,{children:"If this is true, this means the file violates the rule"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".level"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Error level"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".location"})}),(0,i.jsx)(n.td,{children:"`string"}),(0,i.jsx)(n.td,{children:"any`"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".custom"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"any"})}),(0,i.jsx)(n.td,{children:"Custom fields that users can set freely"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"native-functions",children:"Native functions"}),"\n",(0,i.jsxs)(n.p,{children:["lintnet supports all ",(0,i.jsx)(n.a,{href:"https://pkg.go.dev/github.com/google/go-jsonnet#NativeFunction",children:"native functions"})," supported by ",(0,i.jsx)(n.a,{href:"https://github.com/suzuki-shunsuke/go-jsonnet-native-functions",children:"suzuki-shunsuke/go-jsonnet-native-functions"}),", which ports Go standard libraries to Jsonnet.\nThe following native functions are available."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"strings.Contains"}),"\n",(0,i.jsx)(n.li,{children:"strings.TrimPrefix"}),"\n",(0,i.jsx)(n.li,{children:"strings.TrimSpace"}),"\n",(0,i.jsx)(n.li,{children:"regexp.MatchString"}),"\n",(0,i.jsx)(n.li,{children:"filepath.Base"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["You can executed these functions by ",(0,i.jsx)(n.code,{children:'std.native("{native function name}")'}),"."]}),"\n",(0,i.jsx)(n.p,{children:"e.g."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonnet",children:'local contained = std.native("strings.Contains")("hello", "ll"); // true\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>r});var i=t(7294);const s={},l=i.createContext(s);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);