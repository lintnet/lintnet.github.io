"use strict";(self.webpackChunklintnet=self.webpackChunklintnet||[]).push([[867],{9082:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var s=i(4848),t=i(8453);const r={sidebar_position:100},a="Native functions",l={id:"lint-rule/native-function",title:"Native functions",description:"- filepath.Base",source:"@site/docs/lint-rule/native-function.md",sourceDirName:"lint-rule",slug:"/lint-rule/native-function",permalink:"/docs/lint-rule/native-function",draft:!1,unlisted:!1,editUrl:"https://github.com/lintnet/lintnet.github.io/edit/main/docs/lint-rule/native-function.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100},sidebar:"tutorialSidebar",previous:{title:"Lint rules",permalink:"/docs/lint-rule/"},next:{title:"Configuration",permalink:"/docs/config"}},c={},o=[{value:"API design",id:"api-design",level:2},{value:"filepath.Base",id:"filepathbase",level:2},{value:"jsonschema.Validate",id:"jsonschemavalidate",level:2},{value:"regexp.MatchString",id:"regexpmatchstring",level:2},{value:"strings.Contains",id:"stringscontains",level:2},{value:"strings.TrimPrefix",id:"stringstrimprefix",level:2},{value:"strings.TrimSpace",id:"stringstrimspace",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"native-functions",children:"Native functions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#filepathbase",children:"filepath.Base"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#jsonschemavalidate",children:"jsonschema.Validate"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#regexpmatchstring",children:"regexp.MatchString"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#stringscontains",children:"strings.Contains"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#stringstrimprefix",children:"strings.TrimPrefix"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#stringstrimspace",children:"strings.TrimSpace"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"api-design",children:"API design"}),"\n",(0,s.jsxs)(n.p,{children:["Please see ",(0,s.jsx)(n.a,{href:"https://github.com/lintnet/go-jsonnet-native-functions?tab=readme-ov-file#api-design",children:"API design"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"filepathbase",children:"filepath.Base"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"function(string): [string, error]\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://pkg.go.dev/path/filepath#Base",children:"https://pkg.go.dev/path/filepath#Base"})}),"\n",(0,s.jsx)(n.p,{children:'Base returns the last element of path.\nTrailing path separators are removed before extracting the last element.\nIf the path is empty, Base returns ".".\nIf the path consists entirely of separators, Base returns a single separator.'}),"\n",(0,s.jsx)(n.p,{children:"e.g."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonnet",children:"local base = std.native('filepath.Base')('.github/workflows/foo.yaml'); // [\"foo.yaml\", null]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"jsonschemavalidate",children:"jsonschema.Validate"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"function(schema, v any): error\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://pkg.go.dev/github.com/santhosh-tekuri/jsonschema/v5#Schema.Validate",children:"https://pkg.go.dev/github.com/santhosh-tekuri/jsonschema/v5#Schema.Validate"})}),"\n",(0,s.jsx)(n.p,{children:"e.g."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonnet",children:"local schema = import 'main_config_schema.json'; // Import JSON Schema\nlocal validateJSONSchema = std.native('jsonschema.Validate');\nlocal vr = validateJSONSchema(schema, param.config); // Validate param.config with JSON Schema main_config_shema.json\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Validate validates ",(0,s.jsx)(n.code,{children:"v"})," with JSON Schema ",(0,s.jsx)(n.code,{children:"schema"})," and returns the result.\n",(0,s.jsx)(n.code,{children:"schema"})," is a object representing a JSON Schema. You can define it in Jsonnet or read a JSON Schema with ",(0,s.jsx)(n.code,{children:"import"}),".\nValidate returns a error message (string) if something is wrong, or returns ",(0,s.jsx)(n.a,{href:"https://pkg.go.dev/github.com/santhosh-tekuri/jsonschema/v5#Detailed",children:"a detailed error object"})," if ",(0,s.jsx)(n.code,{children:"v"})," violates JSON Schema.\nIf there is no violation, Validate returns ",(0,s.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"regexpmatchstring",children:"regexp.MatchString"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"function(pattern, s string): [bool, error]\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://pkg.go.dev/regexp#MatchString",children:"https://pkg.go.dev/regexp#MatchString"})}),"\n",(0,s.jsx)(n.p,{children:"MatchString reports whether the string s contains any match of the regular expression pattern."}),"\n",(0,s.jsx)(n.p,{children:"e.g."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonnet",children:"local matched = std.native('regexp.MatchString')('foo.*', 'seafood'); // [true, null]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"stringscontains",children:"strings.Contains"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"function(pattern, s string): [bool, error]\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://pkg.go.dev/strings#Contains",children:"https://pkg.go.dev/strings#Contains"})}),"\n",(0,s.jsx)(n.p,{children:"Contains reports whether substr is within s."}),"\n",(0,s.jsx)(n.p,{children:"e.g."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonnet",children:"local contained = std.native('strings.Contains')('seafood', 'foo'); // [true, null]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"stringstrimprefix",children:"strings.TrimPrefix"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"function(s, prefix string): [string, error]\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://pkg.go.dev/strings#TrimPrefix",children:"https://pkg.go.dev/strings#TrimPrefix"})}),"\n",(0,s.jsx)(n.p,{children:"TrimPrefix returns s without the provided leading prefix string.\nIf s doesn't start with prefix, s is returned unchanged."}),"\n",(0,s.jsx)(n.p,{children:"e.g."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonnet",children:"local s = std.native('strings.TrimPrefix')('foo/v1.0.0', 'foo/'); // ['v1.0.0', null]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"stringstrimspace",children:"strings.TrimSpace"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"function(s string): [string, error]\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://pkg.go.dev/strings#TrimSpace",children:"https://pkg.go.dev/strings#TrimSpace"})}),"\n",(0,s.jsx)(n.p,{children:"TrimSpace returns a slice of the string s, with all leading and trailing white space removed, as defined by Unicode."}),"\n",(0,s.jsx)(n.p,{children:"e.g."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonnet",children:"local s = std.native('strings.TrimSpace')('  foo '); // ['foo', null]\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);