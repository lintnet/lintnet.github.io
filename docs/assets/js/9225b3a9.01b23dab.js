"use strict";(self.webpackChunklintnet=self.webpackChunklintnet||[]).push([[950],{4470:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"config","title":"Configuration","description":"Environment variables","source":"@site/docs/config.md","sourceDirName":".","slug":"/config","permalink":"/docs/config","draft":false,"unlisted":false,"editUrl":"https://github.com/lintnet/lintnet.github.io/edit/main/docs/config.md","tags":[],"version":"current","sidebarPosition":400,"frontMatter":{"sidebar_position":400},"sidebar":"tutorialSidebar","previous":{"title":"Native functions","permalink":"/docs/lint-rule/native-function"},"next":{"title":"Test lint rules","permalink":"/docs/test-rule"}}');var s=i(4848),l=i(8453);const o={sidebar_position:400},a="Configuration",r={},d=[{value:"Environment variables",id:"environment-variables",level:2},{value:"Configuration file path",id:"configuration-file-path",level:2},{value:"Scaffold a configuration file",id:"scaffold-a-configuration-file",level:2},{value:"Configuration file format",id:"configuration-file-format",level:2},{value:".targets",id:"targets",level:3},{value:".targets[].lint_files",id:"targetslint_files",level:3},{value:".targets[].modules",id:"targetsmodules",level:3},{value:".targets[].base_data_path",id:"targetsbase_data_path",level:3},{value:".outputs",id:"outputs",level:3},{value:"File paths in configuration files",id:"file-paths-in-configuration-files",level:2},{value:"Top level argument",id:"top-level-argument",level:2},{value:"Glob",id:"glob",level:2},{value:"Exclude by <code>!</code>",id:"exclude-by-",level:3},{value:"Excluded directories and files",id:"excluded-directories-and-files",level:3},{value:"See also",id:"see-also",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,s.jsx)(n.h2,{id:"environment-variables",children:"Environment variables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LINTNET_CONFIG"}),": Configuration file path"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/guides/error-level",children:"LINTNET_ERROR_LEVEL"}),": ",(0,s.jsx)(n.code,{children:"debug|info|warn|error"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/guides/error-level",children:"LINTNET_SHOWN_ERROR_LEVEL"}),": ",(0,s.jsx)(n.code,{children:"debug|info|warn|error"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LINTNET_OUTPUT_SUCCESS"}),": ",(0,s.jsx)(n.code,{children:"true|false"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LINTNET_LOG_LEVEL"}),": ",(0,s.jsx)(n.code,{children:"trace|debug|info|warn|error|fatal|panic"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LINTNET_LOG_COLOR"}),": ",(0,s.jsx)(n.code,{children:"auto|always|never"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LINTNET_GITHUB_TOKEN"}),": GitHub Access Token for getting Modules"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LINTNET_ROOT_DIR"}),": Root directory where modules are installed"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GITHUB_TOKEN"}),": GitHub Access Token for getting Modules"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"configuration-file-path",children:"Configuration file path"}),"\n",(0,s.jsxs)(n.p,{children:["lintnet reads a configuration file ",(0,s.jsx)(n.code,{children:"^\\.?lintnet\\.jsonnet$"})," on the current directory.\nYou can also specify the configuration file path by the command line option ",(0,s.jsx)(n.code,{children:"--config (-c)"})," and the environment variable ",(0,s.jsx)(n.code,{children:"LINTNET_CONFIG"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"lintnet -c foo.yaml lint\n"})}),"\n",(0,s.jsx)(n.h2,{id:"scaffold-a-configuration-file",children:"Scaffold a configuration file"}),"\n",(0,s.jsxs)(n.p,{children:["You can scaffold the configuration file by ",(0,s.jsx)(n.code,{children:"lintnet init"})," command."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"lintnet init\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuration-file-format",children:"Configuration file format"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/lintnet/lintnet/blob/main/json-schema/lintnet.json",children:"JSON Schema"})}),"\n",(0,s.jsx)(n.p,{children:"The configuration is a function returning an object."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonnet",children:'function(param) {\n  // targets is a list of lint configuration.\n  targets: [\n    //\n  ],\n  // ignored_dirs is a list of ignored directories.\n  // ignored_dirs is optional.\n  // The default value is [".git", "node_modules"].\n  ignored_dirs: [\n    ".git",\n    "node_modules",\n  ],\n  // outputs is a list of output configuration.\n  // outputs is optional.\n  // outputs is used to customize output format.\n  outputs: [\n    // ...\n  ],\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"targets",children:".targets"}),"\n",(0,s.jsxs)(n.p,{children:["The element of ",(0,s.jsx)(n.code,{children:"targets"})," is a pair of lint files and data files.\n",(0,s.jsx)(n.code,{children:"data_files"})," is required.\nEither ",(0,s.jsx)(n.code,{children:"lint_files"})," or ",(0,s.jsx)(n.code,{children:"modules"})," is required.\nBoth ",(0,s.jsx)(n.code,{children:"lint_files"})," and ",(0,s.jsx)(n.code,{children:"modules"})," can also be used."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonnet",children:"{\n  id: 'target id', // optional\n  base_data_path: '', // optional\n  // data_files is a list of glob patterns.\n  data_files: [\n    'examples/**/*.csv', // relative path from the configuration file\n    // ...\n  ],\n  // lint_files is a list of local lint files.\n  lint_files: [\n    'main.jsonnet', // relative path from the configuration file\n  ],\n  // modules is a list of modules.\n  modules: [\n    'github_archive/github.com/suzuki-shunsuke/example-lintnet-modules/newline.jsonnet@32ca3be646ec5b5861aab72fed30cd71f6eba9bf:v0.1.2',\n  ],\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"targetslint_files",children:".targets[].lint_files"}),"\n",(0,s.jsxs)(n.p,{children:["An element of ",(0,s.jsx)(n.code,{children:"lint_files"})," is either a string or an object.\nIf you want to pass configuration to lint rules, you need to use an object. Otherwise, a string is enough."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonnet",children:"[\n  'main.jsonnet',\n  {\n    path: 'examples/lint/filename.jsonnet', // required\n    config: {}, // optional. lint rule configuration\n  },\n],\n"})}),"\n",(0,s.jsx)(n.h3,{id:"targetsmodules",children:".targets[].modules"}),"\n",(0,s.jsxs)(n.p,{children:["An element of ",(0,s.jsx)(n.code,{children:"modules"})," is either a string or an object."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonnet",children:"[\n  // github_archive/github.com/<repo owner>/<repo name>/<path>@<full commit hash>[:<version>]\n  // version is optional.\n  'github_archive/github.com/lintnet-modules/ghalint/workflow/action_ref_should_be_full_length_commit_sha/main.jsonnet@00571db321e413d45be457f39e48cd4237399bb7:v0.3.0',\n  {\n    // path is required\n    path: 'github_archive/github.com/lintnet-modules/ghalint/workflow/action_ref_should_be_full_length_commit_sha/main.jsonnet@00571db321e413d45be457f39e48cd4237399bb7:v0.3.0',\n    config: {},\n  },\n  {\n    path: 'github_archive/github.com/lintnet-modules/ghalint@00571db321e413d45be457f39e48cd4237399bb7:v0.3.0',\n    // You can specify file paths in a module with the attribute files.\n    // This style is useful to specify multiple file path patterns in a module and set config parameter by lint rule\n    files: [\n      'workflow/**/main.jsonnet',\n      '!workflow/action_ref_should_be_full_length_commit_sha/main.jsonnet',\n      {\n        path: 'workflow/action_ref_should_be_full_length_commit_sha/main.jsonnet',\n        config: {},\n      },\n    ],\n  },\n],\n"})}),"\n",(0,s.jsx)(n.h3,{id:"targetsbase_data_path",children:".targets[].base_data_path"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"base_data_path"})," is useful to lint files by service directory in a Monorepo."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsonnet",children:"{\n  // data files which are on the same directory as tfaction.yaml.\n  base_data_path: '**/tfaction.yaml',\n  data_files: [\n    // relative path from base_data_path\n    // Glob is also available\n    '*.tf',\n  ],\n  // ...\n},\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In case of ",(0,s.jsx)(n.a,{href:"/docs/guides/lint-across-files/",children:"linting across multiple files"}),", ",(0,s.jsx)(n.code,{children:"base_data_path"})," is useful to separate files.\nIn the above case, if ",(0,s.jsx)(n.code,{children:"**/tfaction.yaml"})," matches ",(0,s.jsx)(n.code,{children:"foo/tfaction.yaml"})," and ",(0,s.jsx)(n.code,{children:"bar/tfaction.yaml"}),", ",(0,s.jsx)(n.code,{children:"foo/*.tf"})," and ",(0,s.jsx)(n.code,{children:"bar/*.tf"})," are linted separately."]}),"\n",(0,s.jsx)(n.h3,{id:"outputs",children:".outputs"}),"\n",(0,s.jsxs)(n.p,{children:["Please see ",(0,s.jsx)(n.a,{href:"/docs/guides/customize-output/",children:"Customize Output"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"file-paths-in-configuration-files",children:"File paths in configuration files"}),"\n",(0,s.jsxs)(n.p,{children:["The file path separator must be a slash ",(0,s.jsx)(n.code,{children:"/"}),".\nIf file paths are relative paths, the base must be the configuration file."]}),"\n",(0,s.jsx)(n.h2,{id:"top-level-argument",children:"Top level argument"}),"\n",(0,s.jsxs)(n.p,{children:["Now the top level argument ",(0,s.jsx)(n.code,{children:"param"})," is empty. This argument is reserved for future enhancement."]}),"\n",(0,s.jsx)(n.h2,{id:"glob",children:"Glob"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"data_files"})," and ",(0,s.jsx)(n.code,{children:"lint_files"})," are lists of patterns matching with data and lint files.\nEach string is parsed with ",(0,s.jsx)(n.a,{href:"https://github.com/bmatcuk/doublestar",children:"bmatcuk/doublestar"}),"."]}),"\n",(0,s.jsxs)(n.h3,{id:"exclude-by-",children:["Exclude by ",(0,s.jsx)(n.code,{children:"!"})]}),"\n",(0,s.jsxs)(n.p,{children:["If each string starts with ",(0,s.jsx)(n.code,{children:"!"}),", files matching with the pattern are excluded."]}),"\n",(0,s.jsx)(n.p,{children:"e.g. foo/example.jsonnet is excluded"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"**/*.jsonnet\n!foo/example.jsonnet\n"})}),"\n",(0,s.jsxs)(n.p,{children:["e.g. foo/example.jsonnet isn't excluded because the later pattern ",(0,s.jsx)(n.code,{children:"foo/*.jsonnet"})," takes precedence"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"**/*.jsonnet\n!foo/example.jsonnet\nfoo/*.jsonnet\n"})}),"\n",(0,s.jsx)(n.h3,{id:"excluded-directories-and-files",children:"Excluded directories and files"}),"\n",(0,s.jsxs)(n.p,{children:["lintnet doesn't check ",(0,s.jsx)(n.code,{children:".gitignore"}),".\nlintnet ignores the following directories."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".git"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"node_modules"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["And in ",(0,s.jsx)(n.code,{children:"lint_files"}),", files ",(0,s.jsx)(n.code,{children:"*_test.jsonnet"})," are ignored."]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/guides/usage",children:"Command line arguments"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/guides/parameterize-rule",children:"Parameterize lint rules"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/guides/customize-output",children:"Customize Ouptputs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/guides/lint-across-files",children:"Lint across files"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const s={},l=t.createContext(s);function o(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);