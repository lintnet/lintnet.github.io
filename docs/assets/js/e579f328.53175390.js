"use strict";(self.webpackChunklintnet=self.webpackChunklintnet||[]).push([[458],{3935:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var i=t(4848),s=t(8453);const l={sidebar_position:300},o="Lint rules",r={id:"lint-rule",title:"Lint rules",description:"lintnet uses Jsonnet to write lint rules.",source:"@site/docs/lint-rule.md",sourceDirName:".",slug:"/lint-rule",permalink:"/docs/lint-rule",draft:!1,unlisted:!1,editUrl:"https://github.com/lintnet/lintnet.github.io/edit/main/docs/lint-rule.md",tags:[],version:"current",sidebarPosition:300,frontMatter:{sidebar_position:300},sidebar:"tutorialSidebar",previous:{title:"Supported data format",permalink:"/docs/supported-data-format"},next:{title:"Configuration",permalink:"/docs/config"}},a={},c=[{value:"Top level arguments",id:"top-level-arguments",level:2},{value:"Format of Jsonnet",id:"format-of-jsonnet",level:2},{value:"Conversion of <code>param.data.value</code>",id:"conversion-of-paramdatavalue",level:2},{value:"Native functions",id:"native-functions",level:2},{value:"Import Modules",id:"import-modules",level:2},{value:"Config parameter",id:"config-parameter",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"lint-rules",children:"Lint rules"}),"\n",(0,i.jsx)(n.p,{children:"lintnet uses Jsonnet to write lint rules."}),"\n",(0,i.jsx)(n.p,{children:"e.g."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonnet",children:"function(param)\n  if std.objectHas(param.data.value, 'description') then [] else [{\n    name: 'description is required',\n  }]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"top-level-arguments",children:"Top level arguments"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://jsonnet.org/ref/language.html#top-level-arguments-tlas",children:"Top level arguments"})," ",(0,i.jsx)(n.code,{children:"param"})," is passed to lint files."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/lintnet/lintnet/blob/main/json-schema/lint-top-level-argument.json",children:"JSON Schema of top level arguments"})}),"\n",(0,i.jsx)(n.p,{children:"e.g."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json5",children:'{\n  data: {\n    file_path: "foo.yaml",\n    file_type: "yaml",\n    text: "...",\n    value: {\n      // data\n    }\n  },\n  config: {}, // config\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"format-of-jsonnet",children:"Format of Jsonnet"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/lintnet/lintnet/blob/main/json-schema/lint-result.json",children:"JSON Schema"})}),"\n",(0,i.jsxs)(n.h2,{id:"conversion-of-paramdatavalue",children:["Conversion of ",(0,i.jsx)(n.code,{children:"param.data.value"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/lintnet/lintnet/pull/437",children:"#437"})}),"\n",(0,i.jsx)(n.p,{children:"lintnet parses data files and converts them to JSON.\nYAML supports non string map keys such as integer and boolean, but JSON doesn't.\nSo when lintnet converts data files to JSON, lintnet converts non string map keys to string."}),"\n",(0,i.jsx)(n.h2,{id:"native-functions",children:"Native functions"}),"\n",(0,i.jsxs)(n.p,{children:["lintnet supports all ",(0,i.jsx)(n.a,{href:"https://pkg.go.dev/github.com/google/go-jsonnet#NativeFunction",children:"native functions"})," supported by ",(0,i.jsx)(n.a,{href:"https://github.com/lintnet/go-jsonnet-native-functions",children:"lintnet/go-jsonnet-native-functions"}),", which ports Go standard libraries to Jsonnet.\nThe following native functions are available."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"strings.Contains"}),"\n",(0,i.jsx)(n.li,{children:"strings.TrimPrefix"}),"\n",(0,i.jsx)(n.li,{children:"strings.TrimSpace"}),"\n",(0,i.jsx)(n.li,{children:"regexp.MatchString"}),"\n",(0,i.jsx)(n.li,{children:"filepath.Base"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["You can executed these functions by ",(0,i.jsx)(n.code,{children:'std.native("{native function name}")'}),"."]}),"\n",(0,i.jsx)(n.p,{children:"e.g."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonnet",children:'local contained = std.native("strings.Contains")("hello", "ll"); // true\n'})}),"\n",(0,i.jsx)(n.h2,{id:"import-modules",children:"Import Modules"}),"\n",(0,i.jsxs)(n.p,{children:["Please see ",(0,i.jsx)(n.a,{href:"/docs/module#2-imported-module",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"config-parameter",children:"Config parameter"}),"\n",(0,i.jsxs)(n.p,{children:["Please see ",(0,i.jsx)(n.a,{href:"/docs/config",children:"here"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(6540);const s={},l=i.createContext(s);function o(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);